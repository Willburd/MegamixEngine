<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSchmidNoivs_IM</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 8;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "semi bulky";

facePlayerOnSpawn = true;

// Enemy specific code
default_grav = grav;
contactStart = contactDamage;
jumpTimer = 40;
image_speed = 0;

col = 0; // 0 = red; 1 = yellow;
init = 1;
myManager = noone;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    //create a capture manager
    if(instance_exists(myManager) == false) {
        if(instance_exists(objSchmidNoivs_CaptureManager) == false) {
            myManager = instance_create(x,y,objSchmidNoivs_CaptureManager);
        }
        else
        {
            myManager = instance_find(objSchmidNoivs_CaptureManager,0);
        }
    }

    //grabbed megaman!
    if(myManager.CaptureEnemy == id) {
        image_index = 3;
        grav = default_grav;
        xspeed = 0;
        iFrames = 0;
    }
    else
    {
    
        //actual AI
        if (ground)
        {
             //capture!
            if(grav == 0.50) {
                //change range here to adjust sensitivity of grab
                if(myManager.CaptureEnemy == noone &amp;&amp; instance_exists(target) &amp;&amp; target.object_index == objMegaman &amp;&amp; abs(x-target.x) &lt; 12 &amp;&amp; abs(y-(target.y+16)) &lt; 15 ) {
                    show_debug_message("SchmidNoivs' IM attempted capture!");
                    myManager.CaptureEnemy = id;
                }
            }
        
            //rest of physics
            grav = default_grav;
            xspeed = 0;
            jumpTimer += 1;
            if (jumpTimer &lt; 10)
            {
                image_index = 2;
            }
            else
            {
                image_index = 0;
            }
            if (jumpTimer &gt;= 60)
            {
                //change the range here for when they start jumping
                if(!instance_exists(target) || (point_distance(x,0,target.x,0) &gt; 90)) {
                    calibrateDirection();
                    jumpTimer = 40;
                }
                else
                {
                    calibrateDirection();
                    jumpTimer = 0;
                    y -= 4;
                    yspeed =  -4.5;
                    xspeed = image_xscale * 2;
                }
            }
        }
        else
        {
            image_index = 1;
            if (instance_exists(target) &amp;&amp; (point_distance(x,0,target.x,0) &lt; 2 || point_distance(xprevious,0,target.x,0) &lt; 2)) {
                xspeed = 0;
                grav = 0.50;
            }
        }
    }
}
else if (dead)
{
    jumpTimer = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///closed sprite is shielded
if (round(image_index) == 0)
{
    other.guardCancel = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
